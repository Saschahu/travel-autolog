name: CI Tests and Coverage

on:
  push:
    branches: [ main, test/offline-e2e-and-coverage-enforce-pr11 ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript type check
        run: npm run typecheck

      - name: ESLint check
        run: npm run lint

      - name: Unit tests with coverage enforcement
        run: npm run coverage

      - name: Build application
        run: npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests (offline)
        run: npm run e2e

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/

  # Keep existing perf budget job unchanged
  perf-budget:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Performance budget check
        run: |
          # Simple size check - adjust thresholds as needed
          DIST_SIZE=$(du -sb dist | cut -f1)
          MAX_SIZE=$((10 * 1024 * 1024))  # 10MB limit
          
          echo "Dist size: $DIST_SIZE bytes"
          echo "Max allowed: $MAX_SIZE bytes"
          
          if [ $DIST_SIZE -gt $MAX_SIZE ]; then
            echo "❌ Build size exceeds performance budget!"
            exit 1
          else
            echo "✅ Build size within performance budget"
          fi