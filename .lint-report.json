[{"filePath":"/workspace/travel-autolog/capacitor.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/postcss.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/android-version.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/check-initial-size.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/lhci-tabs.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/route-budgets.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/stamp-build.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/validate-android-release-ci.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/validate-flags.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/scripts/verify-local.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/boot/appInit.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/boot/cspBoot.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/boot/flagsBoot.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/boot/monitoring.ts","messages":[{"ruleId":"prefer-const","severity":1,"message":"'isMonitoringInitialized' is never reassigned. Use 'const' instead.","line":11,"column":5,"nodeType":"Identifier","messageId":"useConst","endLine":11,"endColumn":28,"fix":{"range":[356,392],"text":"const isMonitoringInitialized = false;"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"/**\n * Centralized monitoring setup and control for Sentry telemetry\n * This module provides runtime enable/disable functionality for monitoring\n */\n\n// Since Sentry is not yet added as a dependency, we'll prepare the interface\n// When Sentry is added, uncomment the imports:\n// import * as Sentry from '@sentry/browser';\n\nlet isMonitoringEnabled = false;\nlet isMonitoringInitialized = false;\n\n// Environment variables for Sentry configuration\nconst SENTRY_DSN = import.meta.env.VITE_SENTRY_DSN || '';\nconst APP_ENV = import.meta.env.MODE || 'development';\n\n/**\n * Initialize Sentry monitoring with privacy-focused configuration\n */\nexport function enableTelemetry(): void {\n  // Guard: if no DSN configured, do nothing\n  if (!SENTRY_DSN || SENTRY_DSN.trim() === '') {\n    console.log('Telemetry: No DSN configured, skipping initialization');\n    return;\n  }\n\n  // Guard: only initialize in production\n  if (APP_ENV !== 'production') {\n    console.log('Telemetry: Not in production mode, skipping initialization');\n    return;\n  }\n\n  try {\n    // When Sentry is added, uncomment this section:\n    /*\n    if (!isMonitoringInitialized) {\n      Sentry.init({\n        dsn: SENTRY_DSN,\n        environment: APP_ENV,\n        \n        // Privacy-focused configuration\n        beforeSend(event) {\n          // Scrub PII and sensitive data\n          if (event.user) {\n            delete event.user.email;\n            delete event.user.ip_address;\n          }\n          \n          // Remove sensitive breadcrumbs\n          if (event.breadcrumbs) {\n            event.breadcrumbs = event.breadcrumbs.filter(breadcrumb => {\n              return !breadcrumb.message?.includes('password') &&\n                     !breadcrumb.message?.includes('token') &&\n                     !breadcrumb.message?.includes('secret');\n            });\n          }\n          \n          return event;\n        },\n        \n        // Sampling configuration\n        tracesSampleRate: 0.1, // 10% performance monitoring\n        replaysSessionSampleRate: 0.01, // 1% session replay\n        replaysOnErrorSampleRate: 0.1, // 10% error session replay\n        \n        // Don't capture console logs in production\n        integrations: [\n          Sentry.browserTracingIntegration(),\n          Sentry.replayIntegration({\n            maskAllText: true, // Privacy: mask all text in replays\n            blockAllMedia: true, // Privacy: block all media in replays\n          }),\n        ],\n      });\n      \n      isMonitoringInitialized = true;\n    }\n    */\n\n    isMonitoringEnabled = true;\n    console.log('Telemetry: Monitoring enabled');\n  } catch (error) {\n    console.error('Failed to enable telemetry:', error);\n  }\n}\n\n/**\n * Disable Sentry monitoring and prevent future sends\n */\nexport function disableTelemetry(): void {\n  try {\n    if (isMonitoringEnabled) {\n      // When Sentry is added, uncomment this section:\n      /*\n      if (isMonitoringInitialized) {\n        Sentry.close();\n      }\n      */\n      \n      isMonitoringEnabled = false;\n      console.log('Telemetry: Monitoring disabled');\n    }\n  } catch (error) {\n    console.error('Failed to disable telemetry:', error);\n  }\n}\n\n/**\n * Check if monitoring is currently enabled\n */\nexport function isTelemetryEnabled(): boolean {\n  return isMonitoringEnabled;\n}\n\n/**\n * Initialize monitoring based on consent and environment\n */\nexport function initializeMonitoring(hasConsent: boolean): void {\n  if (hasConsent && SENTRY_DSN && APP_ENV === 'production') {\n    enableTelemetry();\n  } else {\n    console.log('Telemetry: Not initializing due to consent/config:', {\n      hasConsent,\n      hasDsn: !!SENTRY_DSN,\n      isProduction: APP_ENV === 'production'\n    });\n  }\n}\n\n/**\n * Toggle monitoring on/off based on consent\n */\nexport function setTelemetryEnabled(enabled: boolean): void {\n  if (enabled) {\n    enableTelemetry();\n  } else {\n    disableTelemetry();\n  }\n}","usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/MapView.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/__tests__/ErrorBoundary.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/dashboard/JobFilterDropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/dashboard/JobStatusCard.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/export/ExcelUpload.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/export/ExportPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/finish/A4Preview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/finish/FinishJobTab.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/finish/OvertimeBreakdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/finish/ShareFallbackModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/finish/TimeEntriesTable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/forms/JobEntryForm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/gps/GPSEventLog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/gps/GPSMap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/gps/GPSPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/gps/GPSSettingsComponent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/gps/GPSStatus.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/gps/GPSTrackingSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/gps/JobLinkDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/layout/AppHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/layout/MobileLayout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/location/LeavingHomeDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/location/LocationMap.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/location/LocationSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/location/LocationTracker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/overtime/OvertimeTab.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/privacy/ConsentDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/privacy/ConsentWrapper.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/privacy/PrivacySettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/privacy/PrivacySummary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/reports/ReportTab.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/reports/ReportView.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/reports/renderReport.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/settings/ExportSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/settings/FeatureFlagsPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/settings/HolidaySettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/settings/LanguageSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/settings/OvertimeSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/settings/SettingsDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/time/TimeEntryOverrides.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/accordion.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/alert-dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/aspect-ratio.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/avatar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/badge.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":37,"column":17,"nodeType":"Identifier","messageId":"namedExport","endLine":37,"endColumn":30,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/breadcrumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/build-info.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/button.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":57,"column":18,"nodeType":"Identifier","messageId":"namedExport","endLine":57,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/calendar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/carousel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/chart.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/checkbox.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/collapsible.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/command.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/context-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/day-type-badge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/drawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/dropdown-menu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/form.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":169,"column":3,"nodeType":"Identifier","messageId":"namedExport","endLine":169,"endColumn":15,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/hover-card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/input-otp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/menubar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/navigation-menu.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":120,"column":3,"nodeType":"Identifier","messageId":"namedExport","endLine":120,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/pagination.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/popover.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/progress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/radio-group.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/resizable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/rich-text-editor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/scroll-area.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/separator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/sheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/sidebar.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":761,"column":3,"nodeType":"Identifier","messageId":"namedExport","endLine":761,"endColumn":13,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/skeleton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/slider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/sonner.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":30,"column":19,"nodeType":"Identifier","messageId":"namedExport","endLine":30,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/switch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/table.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/tabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/textarea.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/toast.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/toaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/toggle-group.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/toggle.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":44,"column":18,"nodeType":"Identifier","messageId":"namedExport","endLine":44,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/tooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/components/ui/use-toast.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/config/app.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/contexts/AuthContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":164,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":164,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { User, Session } from '@supabase/supabase-js';\nimport { supabase } from '@/integrations/supabase/client';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface AuthContextType {\n  user: User | null;\n  session: Session | null;\n  signUp: (email: string, password: string, firstName?: string, lastName?: string) => Promise<{ error: any }>;\n  signIn: (email: string, password: string) => Promise<{ error: any }>;\n  signOut: () => Promise<void>;\n  authenticateWithBiometrics: () => Promise<boolean>;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [session, setSession] = useState<Session | null>(null);\n  const [loading, setLoading] = useState(true);\n  const { toast } = useToast();\n\n  useEffect(() => {\n    // Set up auth state listener FIRST\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        console.log('Auth state changed:', event, session?.user?.id);\n        setSession(session);\n        setUser(session?.user ?? null);\n        setLoading(false);\n      }\n    );\n\n    // THEN check for existing session\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setSession(session);\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signUp = async (email: string, password: string, firstName?: string, lastName?: string) => {\n    const redirectUrl = `${window.location.origin}/`;\n    \n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        emailRedirectTo: redirectUrl,\n        data: {\n          first_name: firstName,\n          last_name: lastName,\n        }\n      }\n    });\n\n    if (error) {\n      toast({\n        title: 'Registrierung fehlgeschlagen',\n        description: error.message,\n        variant: 'destructive'\n      });\n    } else {\n      toast({\n        title: 'Registrierung erfolgreich',\n        description: 'Bitte überprüfe deine E-Mail für die Bestätigung'\n      });\n    }\n\n    return { error };\n  };\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    if (error) {\n      toast({\n        title: 'Anmeldung fehlgeschlagen',\n        description: error.message,\n        variant: 'destructive'\n      });\n    } else {\n      toast({\n        title: 'Anmeldung erfolgreich',\n        description: 'Willkommen zurück!'\n      });\n    }\n\n    return { error };\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n      console.error('Error signing out:', error);\n      toast({\n        title: 'Fehler beim Abmelden',\n        description: error.message,\n        variant: 'destructive'\n      });\n    } else {\n      toast({\n        title: 'Erfolgreich abgemeldet',\n        description: 'Auf Wiedersehen!'\n      });\n    }\n  };\n\n  const authenticateWithBiometrics = async (): Promise<boolean> => {\n    try {\n      // For now, simulate biometric authentication (will be replaced with real implementation)\n      const userConfirmed = window.confirm(\n        \"Biometrische Authentifizierung simuliert.\\n\\nIn der echten App würde hier Fingerabdruck/Gesichtserkennung verwendet werden.\\n\\nMöchtest du fortfahren?\"\n      );\n      \n      if (userConfirmed) {\n        toast({\n          title: 'Authentifizierung erfolgreich',\n          description: 'Biometrische Anmeldung bestätigt (simuliert)'\n        });\n        return true;\n      } else {\n        toast({\n          title: 'Authentifizierung abgebrochen',\n          description: 'Biometrische Anmeldung abgebrochen',\n          variant: 'destructive'\n        });\n        return false;\n      }\n    } catch (error) {\n      console.error('Biometric authentication error:', error);\n      toast({\n        title: 'Authentifizierung nicht möglich',\n        description: 'Biometrische Anmeldung nicht verfügbar',\n        variant: 'destructive'\n      });\n      return false;\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        session,\n        signUp,\n        signIn,\n        signOut,\n        authenticateWithBiometrics,\n        loading,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/contexts/UserProfileContext.tsx","messages":[{"ruleId":"react-refresh/only-export-components","severity":1,"message":"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.","line":37,"column":14,"nodeType":"Identifier","messageId":"namedExport","endLine":37,"endColumn":28}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { Preferences } from '@capacitor/preferences';\n\nexport interface UserProfile {\n  name: string;\n  homeAddress: string;\n  email: string;\n  preferredEmailApp: string;\n  gpsEnabled: boolean;\n  localStoragePath: string;\n  // Email report recipients\n  reportTo?: string | null;\n  reportCc?: string | null;\n  reportBcc?: string | null;\n}\n\ninterface UserProfileContextType {\n  profile: UserProfile;\n  updateProfile: (updates: Partial<UserProfile>) => Promise<void>;\n  isLoading: boolean;\n}\n\nconst defaultProfile: UserProfile = {\n  name: '',\n  homeAddress: '',\n  email: '',\n  preferredEmailApp: 'default',\n  gpsEnabled: false,\n  localStoragePath: '',\n  reportTo: null,\n  reportCc: null,\n  reportBcc: null,\n};\n\nconst UserProfileContext = createContext<UserProfileContextType | undefined>(undefined);\n\nexport const useUserProfile = () => {\n  const context = useContext(UserProfileContext);\n  if (!context) {\n    throw new Error('useUserProfile must be used within a UserProfileProvider');\n  }\n  return context;\n};\n\ninterface UserProfileProviderProps {\n  children: ReactNode;\n}\n\nexport const UserProfileProvider: React.FC<UserProfileProviderProps> = ({ children }) => {\n  const [profile, setProfile] = useState<UserProfile>(defaultProfile);\n  const [isLoading, setIsLoading] = useState(true);\n\n  console.log('UserProfileProvider render:', { isLoading });\n\n  // Load profile on mount\n  useEffect(() => {\n    console.log('UserProfileProvider: useEffect triggered');\n    loadProfile();\n  }, []);\n\n  const loadProfile = async () => {\n    console.log('UserProfile: Loading profile...');\n    const storageKey = 'userProfile';\n    try {\n      let value: string | null = null;\n      try {\n        const res = await Preferences.get({ key: storageKey });\n        value = res.value ?? null;\n        console.log('UserProfile: Got from Capacitor:', value);\n      } catch (e) {\n        console.warn('UserProfile: Capacitor Preferences.get failed, falling back to localStorage', e);\n        value = localStorage.getItem(storageKey);\n      }\n      // Extra fallback in case value is still null\n      if (!value) {\n        value = localStorage.getItem(storageKey);\n        console.log('UserProfile: Got from localStorage fallback:', value);\n      }\n      if (value) {\n        const savedProfile = JSON.parse(value);\n        console.log('UserProfile: Parsed saved profile:', savedProfile);\n        \n        // Migration: Set reportTo to email if not set\n        const migratedProfile = { \n          ...defaultProfile, \n          ...savedProfile,\n          reportTo: savedProfile.reportTo ?? (savedProfile.email || null)\n        };\n        \n        setProfile(migratedProfile);\n        console.log('UserProfile: Profile loaded successfully');\n      } else {\n        console.log('UserProfile: No saved profile, using defaults');\n      }\n    } catch (error) {\n      console.error('UserProfile: Error loading profile:', error);\n    } finally {\n  console.log('UserProfile: Setting loading to false');\n      setIsLoading(false);\n    }\n  };\n\n  // Safety timeout to prevent infinite loading\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (isLoading) {\n        console.warn('UserProfile: Loading timeout, forcing completion');\n        setIsLoading(false);\n      }\n    }, 3000);\n    \n    return () => clearTimeout(timeout);\n  }, [isLoading]);\n\n  const updateProfile = async (updates: Partial<UserProfile>) => {\n    const storageKey = 'userProfile';\n    console.log('updateProfile called with:', updates);\n    try {\n      const newProfile = { ...profile, ...updates };\n      console.log('New profile:', newProfile);\n      setProfile(newProfile);\n      \n      const serialized = JSON.stringify(newProfile);\n      console.log('Serialized profile:', serialized);\n      \n      // Try Capacitor Preferences first, fallback to localStorage\n      let saved = false;\n      try {\n        await Preferences.set({\n          key: storageKey,\n          value: serialized\n        });\n        console.log('Saved via Capacitor Preferences');\n        saved = true;\n      } catch (e) {\n        console.warn('Capacitor Preferences.set failed:', e);\n      }\n      \n      if (!saved) {\n        localStorage.setItem(storageKey, serialized);\n        console.log('Saved via localStorage fallback');\n      }\n      \n      console.log('Profile update completed successfully');\n    } catch (error) {\n      console.error('Error saving user profile:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <UserProfileContext.Provider value={{ profile, updateProfile, isLoading }}>\n      {children}\n    </UserProfileContext.Provider>\n  );\n};","usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/features/jobs/report/helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/flags/__tests__/flags.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/flags/__tests__/remoteConfig.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/flags/flags.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/flags/remoteConfig.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/gps/fsm/__tests__/machine.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/gps/fsm/core.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/use-mobile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/use-toast.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useDayTypeDetection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useEmailService.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useExcelExport.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useExcelUpload.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useExportSettings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useGPSTracking.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useJobs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useLocation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useOvertimeCalculation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useRouteTracking.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/hooks/useSupabaseGPS.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/i18n/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/integrations/supabase/client.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/integrations/supabase/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/__tests__/excelAdapter.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/__tests__/flags.smartGps.spec.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/__tests__/loaders.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/billing.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/csv.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/csv.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/drafts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/email.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/emailProviders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/excelAdapter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/export/geojson.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/export/gpx.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/files.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/flags.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/format.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/fs/androidDirectory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/fs/directoryPicker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/fs/webDirectory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/fsAccess.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/fsStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/geo.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/holidays.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/i18n/reportI18n.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/i18nSafe.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/imageResize.ts","messages":[{"ruleId":"prefer-const","severity":1,"message":"'width' is never reassigned. Use 'const' instead.","line":41,"column":15,"nodeType":"Identifier","messageId":"useConst","endLine":41,"endColumn":20,"fix":{"range":[871,1009],"text":"const { width, height } = calculateDimensions(\n          img.width,\n          img.height,\n          maxWidth,\n          maxHeight\n        );"}},{"ruleId":"prefer-const","severity":1,"message":"'height' is never reassigned. Use 'const' instead.","line":41,"column":22,"nodeType":"Identifier","messageId":"useConst","endLine":41,"endColumn":28,"fix":{"range":[871,1009],"text":"const { width, height } = calculateDimensions(\n          img.width,\n          img.height,\n          maxWidth,\n          maxHeight\n        );"}}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"/**\n * Image processing utilities with EXIF stripping and auto-resize to 1600px\n */\n\ninterface ImageResizeOptions {\n  maxWidth?: number;\n  maxHeight?: number;\n  quality?: number;\n  format?: 'jpeg' | 'png' | 'webp';\n}\n\ninterface ResizeResult {\n  blob: Blob;\n  url: string;\n  width: number;\n  height: number;\n}\n\n/**\n * Resize image and strip EXIF data (including GPS location)\n * Automatically handles orientation correction\n */\nexport async function resizeImage(\n  file: File,\n  options: ImageResizeOptions = {}\n): Promise<ResizeResult> {\n  const {\n    maxWidth = 1600,\n    maxHeight = 1600,\n    quality = 0.85,\n    format = 'jpeg'\n  } = options;\n\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    \n    img.onload = () => {\n      try {\n        // Calculate new dimensions while preserving aspect ratio\n        let { width, height } = calculateDimensions(\n          img.width,\n          img.height,\n          maxWidth,\n          maxHeight\n        );\n\n        // Create canvas for resizing\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        \n        if (!ctx) {\n          reject(new Error('Failed to get canvas context'));\n          return;\n        }\n\n        canvas.width = width;\n        canvas.height = height;\n\n        // Fill with white background for JPEG (no transparency)\n        if (format === 'jpeg') {\n          ctx.fillStyle = '#ffffff';\n          ctx.fillRect(0, 0, width, height);\n        }\n\n        // Draw resized image (this automatically strips EXIF data)\n        ctx.drawImage(img, 0, 0, width, height);\n\n        // Convert to blob\n        canvas.toBlob(\n          (blob) => {\n            if (!blob) {\n              reject(new Error('Failed to create blob'));\n              return;\n            }\n\n            const url = URL.createObjectURL(blob);\n            resolve({ blob, url, width, height });\n          },\n          `image/${format}`,\n          quality\n        );\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    img.onerror = () => {\n      reject(new Error('Failed to load image'));\n    };\n\n    // Load the image\n    const url = URL.createObjectURL(file);\n    img.src = url;\n  });\n}\n\n/**\n * Calculate new dimensions while preserving aspect ratio\n */\nfunction calculateDimensions(\n  originalWidth: number,\n  originalHeight: number,\n  maxWidth: number,\n  maxHeight: number\n): { width: number; height: number } {\n  let width = originalWidth;\n  let height = originalHeight;\n\n  // Only resize if image is larger than max dimensions\n  if (width > maxWidth || height > maxHeight) {\n    const aspectRatio = width / height;\n\n    if (width > height) {\n      width = maxWidth;\n      height = Math.round(width / aspectRatio);\n    } else {\n      height = maxHeight;\n      width = Math.round(height * aspectRatio);\n    }\n\n    // Ensure we don't exceed either dimension\n    if (width > maxWidth) {\n      width = maxWidth;\n      height = Math.round(width / aspectRatio);\n    }\n    if (height > maxHeight) {\n      height = maxHeight;\n      width = Math.round(height * aspectRatio);\n    }\n  }\n\n  return { width, height };\n}\n\n/**\n * Validate image file by MIME type and magic bytes\n */\nexport function validateImageFile(file: File): { isValid: boolean; error?: string } {\n  const allowedMimes = [\n    'image/jpeg',\n    'image/jpg', \n    'image/png',\n    'image/webp',\n    'image/gif'\n  ];\n\n  // Check MIME type\n  if (!allowedMimes.includes(file.type)) {\n    return {\n      isValid: false,\n      error: 'Unsupported file type. Please use JPEG, PNG, WebP, or GIF.'\n    };\n  }\n\n  // Check file size (8MB limit)\n  const maxSize = 8 * 1024 * 1024; // 8MB\n  if (file.size > maxSize) {\n    return {\n      isValid: false,\n      error: 'File size too large. Maximum size is 8MB.'\n    };\n  }\n\n  return { isValid: true };\n}\n\n/**\n * Validate file signature (magic bytes) for additional security\n */\nexport async function validateFileSignature(file: File): Promise<boolean> {\n  const buffer = await file.slice(0, 12).arrayBuffer();\n  const bytes = new Uint8Array(buffer);\n\n  // JPEG: FF D8 FF\n  if (bytes[0] === 0xFF && bytes[1] === 0xD8 && bytes[2] === 0xFF) {\n    return true;\n  }\n\n  // PNG: 89 50 4E 47 0D 0A 1A 0A\n  if (\n    bytes[0] === 0x89 && bytes[1] === 0x50 && bytes[2] === 0x4E && bytes[3] === 0x47 &&\n    bytes[4] === 0x0D && bytes[5] === 0x0A && bytes[6] === 0x1A && bytes[7] === 0x0A\n  ) {\n    return true;\n  }\n\n  // WebP: 52 49 46 46 ... 57 45 42 50\n  if (\n    bytes[0] === 0x52 && bytes[1] === 0x49 && bytes[2] === 0x46 && bytes[3] === 0x46 &&\n    bytes[8] === 0x57 && bytes[9] === 0x45 && bytes[10] === 0x42 && bytes[11] === 0x50\n  ) {\n    return true;\n  }\n\n  // GIF: 47 49 46 38 (37/39) 61\n  if (\n    bytes[0] === 0x47 && bytes[1] === 0x49 && bytes[2] === 0x46 && bytes[3] === 0x38 &&\n    (bytes[4] === 0x37 || bytes[4] === 0x39) && bytes[5] === 0x61\n  ) {\n    return true;\n  }\n\n  return false;\n}","usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/imageUpload.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/loaders.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/loaders/__tests__/exceljs.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/loaders/__tests__/mapbox.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/loaders/date-fns.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/loaders/exceljs.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/loaders/jspdf.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/loaders/mapbox.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/mapboxToken.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/native/directoryPicker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/native/directoryPicker.web.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/orderRefs.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/overtimeCalc.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/pdfOptimized.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/platform.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/privacy/consentStorage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/reportFileName.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/sendReportEmail.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/shareWithEmail.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/strings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/timeCalc.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/trackingGeo.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/lib/utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/pages/Auth.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/pages/DirectoryPickerBridge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/pages/Index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/pages/NotFound.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/pages/__tests__/AppShell.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/plugins/directoryPicker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/plugins/emailSender.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/privacy/dataPortability.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/security/__tests__/htmlSanitizer.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/security/__tests__/tokenStorage.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/security/htmlSanitizer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/security/storage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/security/tokenStorage.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/services/geolocation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/services/geolocationService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/services/gpsSessionCalculator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/services/gpsStateMachine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/services/gpsTrackingService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/state/settingsStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/state/trackingStore.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/templates/ExcelTemplate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/templates/ExcelTemplateExcelJS.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/test/__tests__/integration.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/test/__tests__/loader-failures.test.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/test/setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/types/dayReport.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/types/fs-access.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/types/gps-events.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/types/gps.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/types/overtime.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/types/tracking.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/utils/excelFormatter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/utils/fixDuplicateEntry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/utils/resetAppData.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/src/vite-env.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/tailwind.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/test/mocks/server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/test/policies/dangerousInnerHTML.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/test/setup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/vite.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/workspace/travel-autolog/vitest.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
