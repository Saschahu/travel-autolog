import i18next, { i18n as I18nInstance } from 'i18next';
import { initReactI18next } from 'react-i18next';

// Import report translations
const reportTranslations = {
  de: {
    title: 'Arbeitsbericht',
    createdAt: 'Erstellt am',
    customer: 'Kunde',
    address: 'Adresse',
    contact: 'Kontakt',
    manufacturer: 'Hersteller',
    model: 'Modell',
    serialNumber: 'Seriennummer',
    evaticNo: 'EVATIC Nr.',
    jobId: 'Job-ID',
    workTimes: 'Arbeitszeiten',
    date: 'Datum',
    type: 'Typ',
    from: 'Von',
    to: 'Bis',
    break: 'Pause',
    duration: 'Dauer',
    note: 'Notiz',
    totalHours: 'Gesamtstunden',
    workReport: 'Arbeitsbericht',
    signatures: 'Unterschriften',
    technician: 'Techniker',
    customerSig: 'Kunde',
    dateLabel: 'Datum',
    noTimeEntries: 'Keine Zeiteinträge vorhanden.',
    noWorkReport: 'Kein Arbeitsbericht verfasst.',
    notSpecified: 'Nicht angegeben',
    overtimeBreakdown: 'Überstunden-Aufschlüsselung',
    regular: 'Regulär',
    overtime50: 'Überstunden 50%',
    overtime100: 'Überstunden 100%',
    saturday50: 'Samstag (50%)',
    sundayHoliday100: 'Sonntag/Feiertag (100%)',
    minutesShort: 'Min',
    hoursShort: 'h',
    // Time entry types
    travel: 'Anreise',
    work: 'Arbeitszeit',
    departure: 'Abreise',
  },
  en: {
    title: 'Work Report',
    createdAt: 'Created at',
    customer: 'Customer',
    address: 'Address',
    contact: 'Contact',
    manufacturer: 'Manufacturer',
    model: 'Model',
    serialNumber: 'Serial Number',
    evaticNo: 'EVATIC No.',
    jobId: 'Job ID',
    workTimes: 'Work Times',
    date: 'Date',
    type: 'Type',
    from: 'From',
    to: 'To',
    break: 'Break',
    duration: 'Duration',
    note: 'Note',
    totalHours: 'Total Hours',
    workReport: 'Work Report',
    signatures: 'Signatures',
    technician: 'Technician',
    customerSig: 'Customer',
    dateLabel: 'Date',
    noTimeEntries: 'No time entries available.',
    noWorkReport: 'No work report written.',
    notSpecified: 'Not specified',
    overtimeBreakdown: 'Overtime Breakdown',
    regular: 'Regular',
    overtime50: 'Overtime 50%',
    overtime100: 'Overtime 100%',
    saturday50: 'Saturday (50%)',
    sundayHoliday100: 'Sunday/Holiday (100%)',
    minutesShort: 'min',
    hoursShort: 'h',
    // Time entry types
    travel: 'Travel',
    work: 'Work',
    departure: 'Departure',
  },
  nb: {
    title: 'Arbeidsrapport',
    createdAt: 'Opprettet',
    customer: 'Kunde',
    address: 'Adresse',
    contact: 'Kontakt',
    manufacturer: 'Produsent',
    model: 'Modell',
    serialNumber: 'Serienummer',
    evaticNo: 'EVATIC Nr.',
    jobId: 'Jobb-ID',
    workTimes: 'Arbeidstider',
    date: 'Dato',
    type: 'Type',
    from: 'Fra',
    to: 'Til',
    break: 'Pause',
    duration: 'Varighet',
    note: 'Notat',
    totalHours: 'Total timer',
    workReport: 'Arbeidsrapport',
    signatures: 'Signaturer',
    technician: 'Tekniker',
    customerSig: 'Kunde',
    dateLabel: 'Dato',
    noTimeEntries: 'Ingen tidsregistreringer tilgjengelig.',
    noWorkReport: 'Ingen arbeidsrapport skrevet.',
    notSpecified: 'Ikke spesifisert',
    overtimeBreakdown: 'Overtidsoppdeling',
    regular: 'Vanlig',
    overtime50: 'Overtid 50%',
    overtime100: 'Overtid 100%',
    saturday50: 'Lørdag (50%)',
    sundayHoliday100: 'Søndag/Helligdag (100%)',
    minutesShort: 'min',
    hoursShort: 't',
    // Time entry types
    travel: 'Reise',
    work: 'Arbeid',
    departure: 'Avreise',
  },
  sv: {
    title: 'Arbetsrapport',
    createdAt: 'Skapad',
    customer: 'Kund',
    address: 'Adress',
    contact: 'Kontakt',
    manufacturer: 'Tillverkare',
    model: 'Modell',
    serialNumber: 'Serienummer',
    evaticNo: 'EVATIC Nr.',
    jobId: 'Jobb-ID',
    workTimes: 'Arbetstider',
    date: 'Datum',
    type: 'Typ',
    from: 'Från',
    to: 'Till',
    break: 'Paus',
    duration: 'Längd',
    note: 'Anteckning',
    totalHours: 'Totala timmar',
    workReport: 'Arbetsrapport',
    signatures: 'Signaturer',
    technician: 'Tekniker',
    customerSig: 'Kund',
    dateLabel: 'Datum',
    noTimeEntries: 'Inga tidsposter tillgängliga.',
    noWorkReport: 'Ingen arbetsrapport skriven.',
    notSpecified: 'Inte specificerad',
    overtimeBreakdown: 'Övertidsfördelning',
    regular: 'Vanlig',
    overtime50: 'Övertid 50%',
    overtime100: 'Övertid 100%',
    saturday50: 'Lördag (50%)',
    sundayHoliday100: 'Söndag/Helgdag (100%)',
    minutesShort: 'min',
    hoursShort: 't',
    // Time entry types
    travel: 'Resa',
    work: 'Arbete',
    departure: 'Avresa',
  },
  da: {
    title: 'Arbejdsrapport',
    createdAt: 'Oprettet',
    customer: 'Kunde',
    address: 'Adresse',
    contact: 'Kontakt',
    manufacturer: 'Producent',
    model: 'Model',
    serialNumber: 'Serienummer',
    evaticNo: 'EVATIC Nr.',
    jobId: 'Job-ID',
    workTimes: 'Arbejdstider',
    date: 'Dato',
    type: 'Type',
    from: 'Fra',
    to: 'Til',
    break: 'Pause',
    duration: 'Varighed',
    note: 'Note',
    totalHours: 'Samlede timer',
    workReport: 'Arbejdsrapport',
    signatures: 'Signaturer',
    technician: 'Tekniker',
    customerSig: 'Kunde',
    dateLabel: 'Dato',
    noTimeEntries: 'Ingen tidsregistreringer tilgængelige.',
    noWorkReport: 'Ingen arbejdsrapport skrevet.',
    notSpecified: 'Ikke specificeret',
    overtimeBreakdown: 'Overtidsopdeling',
    regular: 'Normal',
    overtime50: 'Overtid 50%',
    overtime100: 'Overtid 100%',
    saturday50: 'Lørdag (50%)',
    sundayHoliday100: 'Søndag/Helligdag (100%)',
    minutesShort: 'min',
    hoursShort: 't',
    // Time entry types
    travel: 'Rejse',
    work: 'Arbejde',
    departure: 'Afrejse',
  },
};

export async function createReportI18n(lang: string): Promise<I18nInstance> {
  const inst = i18next.createInstance();
  
  await inst
    .use(initReactI18next)
    .init({
      resources: {
        de: { report: reportTranslations.de },
        en: { report: reportTranslations.en },
        nb: { report: reportTranslations.nb },
        sv: { report: reportTranslations.sv },
        da: { report: reportTranslations.da },
      },
      lng: lang,
      fallbackLng: 'en',
      ns: ['report'],
      defaultNS: 'report',
      interpolation: { 
        escapeValue: false 
      },
      debug: false,
    });
    
  return inst;
}