name: SBOM and License Compliance

on:
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch: # Allow manual runs

jobs:
  sbom-and-licenses:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate SBOM (JSON)
        run: npm run sbom:json

      - name: Generate SBOM (XML)  
        run: npm run sbom:xml

      - name: Run License Scan
        run: node scripts/license-scan.cjs

      - name: Generate Third-Party Notices
        run: node scripts/third-party-notices.cjs

      - name: Upload SBOM Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sbom-artifacts
          path: |
            sbom/cyclonedx.json
            sbom/cyclonedx.xml
          retention-days: 30

      - name: Upload License Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: license-artifacts
          path: |
            licenses/licenses.json
            licenses/THIRD_PARTY_NOTICES.md
            licenses/policy.json
          retention-days: 30

      - name: Comment PR with License Summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const licenseData = JSON.parse(fs.readFileSync('licenses/licenses.json', 'utf8'));
              const summary = licenseData.summary;
              
              const comment = `## 📊 SBOM & License Compliance Report
              
              **Summary:**
              - 📦 Total packages: ${summary.total}
              - ✅ Allowed licenses: ${summary.allowed}
              - 🔍 Review required: ${summary.review}
              - ❌ Policy violations: ${summary.denied}
              - ⚠️ Unknown licenses: ${summary.unknown}
              - 📝 Exceptions: ${summary.exceptions}
              
              **Top licenses:**
              ${Object.entries(licenseData.licenseCounts)
                .sort(([,a], [,b]) => b - a)
                .slice(0, 5)
                .map(([license, count]) => `- ${license}: ${count}`)
                .join('\n')}
              
              ${summary.denied > 0 ? '❌ **This PR introduces license policy violations and cannot be merged.**' : ''}
              ${summary.unknown > 0 ? '⚠️ **This PR has packages with unknown licenses that require review.**' : ''}
              ${summary.denied === 0 && summary.unknown === 0 ? '✅ **All licenses comply with policy.**' : ''}
              
              📁 Detailed reports available in workflow artifacts.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read license data for PR comment:', error);
            }