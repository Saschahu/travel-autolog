name: Auto-merge Dependencies

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  auto-merge:
    name: Auto-merge safe dependency updates
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && contains(github.event.pull_request.labels.*.name, 'deps')
    
    steps:
      - name: Check if PR is eligible for auto-merge
        id: check-eligibility
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            const baseBranch = pr.base.ref;
            
            // Only auto-merge patch updates
            const isPatch = title.includes('patch') || /bump.*from.*\d+\.\d+\.\d+.*to.*\d+\.\d+\.\d+/i.test(title);
            
            // Never auto-merge on main branch
            const isMainBranch = baseBranch === 'main';
            
            // Check if all required checks have passed
            const checks = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: pr.head.sha
            });
            
            const allChecksPassed = checks.data.check_runs.every(check => 
              check.status === 'completed' && check.conclusion === 'success'
            );
            
            const eligible = isPatch && !isMainBranch && allChecksPassed;
            
            core.setOutput('eligible', eligible);
            core.setOutput('reason', eligible ? 'Eligible for auto-merge' : 
              `Not eligible: patch=${isPatch}, mainBranch=${isMainBranch}, checksPassed=${allChecksPassed}`);

      - name: Auto-merge PR
        if: steps.check-eligibility.outputs.eligible == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash',
              commit_title: `Auto-merge: ${context.payload.pull_request.title}`,
              commit_message: 'Automatically merged by dependency auto-merge workflow'
            });
            
            console.log('‚úÖ PR auto-merged successfully');

      - name: Comment on ineligible PR
        if: steps.check-eligibility.outputs.eligible != 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `üîí **Auto-merge not applicable**\n\nReason: ${{ steps.check-eligibility.outputs.reason }}\n\nThis PR requires manual review and merge.`
            });
            
            console.log('‚ÑπÔ∏è Added comment explaining why auto-merge was not applied');